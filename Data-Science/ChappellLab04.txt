Exercise 1a:
    Answer:
        boolean_vector <- c(TRUE, FALSE, TRUE)

Exercise 1b:
    Answer:
        roulette_vector <- c(-24, -50, 100, -350, 10)

Exercise 2a:
    Answer:
        names(poker_vector) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
        names(roulette_vector) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")

Exercise 2b:
    Answer:
        days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
        names(poker_vector) <- days_vector
        names(roulette_vector) <- days_vector

Exercise 3a:
    Answer:
        poker_Wednesday <- poker_vector["Wednesday"]

Exercise 3b:
    Answer:
        roulette_Friday <- roulette_vector["Friday"]

Exercise 3c:
    Answer:
        poker_midweek <- c(poker_vector["Tuesday"], poker_vector["Wednesday"], poker_vector["Thursday"])

Exercise 3d:
    Answer:
        roulette_endweek <- c(roulette_vector["Thursday"], roulette_vector["Friday"])

Exercise 3e:
    Answer:
        poker_midweek <- poker_vector[2:4] # Really wish that the index started at 0

Exercise 3f:
    Answer:
        roulette_subset <- roulette_vector[2:5]

Exercise 3g:
    Answer:
        roulette_thursday <- roulette_vector["Thursday"]

Exercise 3h:
    Answer:
        poker_tuesday <- poker_vector["Tuesday"]

Exercise 3i:
    Answer:
    # can also be done as poker_start <- poker_vector[c("Monday", "Tuesday", "Wednesday")], but wanted to see if below would work, and it did!
        poker_start <- poker_vector[c(days_vector[1:3])]
        avg_poker_start <- mean(poker_start)
    # Also found that it can all be combined into one line thankfully!  One less step is always nice
        avg_poker_start <- mean(poker_vector[c(days_vector[1:3])])

Exercise 4a:
    Answer:
        roulette_subset <- roulette_vector[c(1,3,5)]

Exercise 4b:
    Answer:
        poker_start <- poker_vector[c(TRUE, TRUE, TRUE, FALSE, FALSE)]

Exercise 4c:
    Answer:
        selection_vector <- poker_vector[poker_vector > 0]

Exercise 4d:
    Answer:
        poker_profits <- as.numeric(selection_vector[1]) + as.numeric(selection_vector[2]) + as.numeric(selection_vector[3])

Exercise 4e:
    Answer:
        roulette_profits <- roulette_vector[roulette_vector > 0]

Exercise 4f:
    Answer:
        roulette_total_profit <- sum(roulette_profits)

Exercise 4g:
    Answer:
        num_profit_days <- length(roulette_profits)


